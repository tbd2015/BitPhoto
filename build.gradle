apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'

sourceCompatibility = '1.7'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

if (!hasProperty('mainClass')) {
    ext.mainClass = 'BitPhotoSystem'
}

repositories {
	  mavenCentral() 
          flatDir{ 
             dirs 'lib'      
          }
}
	  
dependencies{
	compile 'javax:javaee-web-api:6.0'
	compile 'javax.ws.rs:javax.ws.rs-api:2.0.1'
	compile 'mysql:mysql-connector-java:5.1.30'
        compile 'com.googlecode.json-simple:json-simple:1.1.1'
        compile 'com.google.code.gson:gson:2.3.1'
        compile 'org.apache.lucene:lucene-analyzers-common:5.1.0'
        compile 'org.apache.lucene:lucene-core:4.8.1'
        compile 'org.apache.lucene:lucene-queryparser:5.1.0'
        compile name:'javax.json-1.0.4' 
        testCompile group: 'junit', name: 'junit', version: '4.10'
}

sourceSets.all {
    output.resourcesDir = output.classesDir
}

war {
    from 'src/main/webapp' // adds a file-set to the root of the archive
    webInf { from 'src/main/webapp/WEB-INF' } // adds a file-set to the WEB-INF dir.
    //classpath fileTree('src/main/webapp/WEB-INF/lib') // adds a file-set to the WEB-INF/lib dir.
    //classpath fileTree('src/main/java/META-INF/persistence.xml')
    //sclasspath configurations.moreLibs // adds a configuration to the WEB-INF/lib dir.
    webXml = file('src/main/webapp/WEB-INF/web.xml') // copies a file to WEB-INF/web.xml
}

/**
*  ~/.gradle/gradle.properties:
*  glassfishHome=/path/to/glassfish_home
*
*  or in Netbeans, right click project, Properties, Manage Build in Tasks, Run
*  Add line to Arguments: -Dorg.gradle.project.glassfishHome=/path/to/glassfish_home
*
*  For more information about Exec tasks see
*  http://www.gradle.org/docs/current/dsl/org.gradle.api.tasks.Exec.html
*/
task deploy(dependsOn: 'war', type:Exec) {
  workingDir "${glassfishHome}${File.separator}bin"
 
  if (System.properties['os.name'].toLowerCase().contains('osx')) {
    commandLine 'cmd', '/c', 'asadmin.bat'
  } else {
    commandLine "./asadmin"
  }
  args "deploy", "--force=true", "${war.archivePath}"
}